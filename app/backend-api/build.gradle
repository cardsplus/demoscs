plugins {
    id 'java-library'
    id 'eclipse'
    id 'jacoco'
    id 'io.spring.dependency-management'
    id 'org.springframework.boot'
}

dependencies {
    // https://spring.io/projects/spring-framework
    implementation('org.springframework:spring-core')
    // https://projects.eclipse.org/projects/ee4j.jpa
    api('jakarta.persistence:jakarta.persistence-api')
    // https://projects.eclipse.org/projects/ee4j.jta
    api('jakarta.transaction:jakarta.transaction-api')
    // https://github.com/FasterXML/jackson-docs
    api('com.fasterxml.jackson.core:jackson-databind')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
}
dependencies {
    // https://projectlombok.org
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
}
dependencies {
    // https://projectlombok.org
    testImplementation('org.projectlombok:lombok')
    // https://junit.org/junit5
    testImplementation('org.junit.jupiter:junit-jupiter')
    // https://site.mockito.org/
    testImplementation('org.mockito:mockito-junit-jupiter')
}

test {
    reports {
        html.enabled true
        html.destination = file("${rootDir}/pages/html/" + project.name + "/junit5")
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
        html.destination file("${rootDir}/pages/html/" + project.name + "/jacoco")
    }
}

jar {
    enabled = true
    manifest {
        attributes 'Specification-Title': project.name
        attributes 'Specification-Version': VERSION
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
    }
}

bootJar {
    enabled = false
}

bootRun {
    enabled = false
}

bootBuildImage {
    enabled = false
}
