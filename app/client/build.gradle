plugins {
    id 'base'
}

import org.apache.tools.ant.taskdefs.condition.Os
ext.NPM = Os.isFamily(Os.FAMILY_WINDOWS) ? "npm.cmd" : "npm";

task npmInstall(type: Exec) {
    enabled = System.getenv().containsKey('CI')
    commandLine NPM, 'install'
}
build.dependsOn npmInstall

task npmBuild(type: Exec) {
    enabled = System.getenv().containsKey('CI')
    mustRunAfter npmInstall
    commandLine NPM, 'run', 'build'
}
build.dependsOn npmBuild

task npmRun(type: Exec) {
    mustRunAfter npmInstall
    commandLine NPM, 'run', 'dev'
}

import java.util.Optional;
ext.CLIENT_IMAGE = Optional.ofNullable(System.getenv("CLIENT_IMAGE"))
            .orElse(rootProject.name + "/" + project.name + ":latest")
ext.SERVER_URL = Optional.ofNullable(System.getenv("SERVER_URL"))
            .orElse("http://localhost:8080")

task nodeBuildImage {
    enabled = true
    doLast {
        exec {
            executable 'docker'
            args 'build', '.', '--build-arg', 'SERVER_URL='+SERVER_URL, '-t', CLIENT_IMAGE
        }
    }
}

task versionCheck() {
    build.dependsOn it
    assert new File("${projectDir}/package.json")
        .text
        .contains('"version": "' + VERSION + '"')
}
