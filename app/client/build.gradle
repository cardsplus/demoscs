plugins {
    id 'base'
}

import org.apache.tools.ant.taskdefs.condition.Os
ext.NPM = Os.isFamily(Os.FAMILY_WINDOWS) ? "npm.cmd" : "npm";

task npmInstall {
    doLast {
        exec {
            commandLine NPM, 'install'
        }
    }
}

task npmUpgrade {
    doLast {
        exec {
            commandLine NPM, 'upgrade'
        }
    }
}

task npmBuild {
    build.dependsOn it
    doLast {
        exec {
            commandLine NPM, 'install'
        }
        exec {
            commandLine NPM, 'run', 'test'
        }
        exec {
            commandLine NPM, 'run', 'build'
        }
    }
}

import java.util.Optional;
ext.CLIENT_IMAGE = Optional.ofNullable(System.getenv("CLIENT_IMAGE"))
            .orElse(rootProject.name + "/" + project.name)
ext.CLIENT_TAG = Optional.ofNullable(System.getenv("CLIENT_TAG"))
            .orElse('latest')

task dockerBuild {
    enabled = true
    doLast {
        String image1 = CLIENT_IMAGE + ":" + CLIENT_TAG;
        String image2 = CLIENT_IMAGE + ":" + VERSION;
        exec {
            executable 'docker'
            args 'build', '.', '-t', image1
        }
        if (image1 != image2) {
            exec {
                executable 'docker'
                args 'tag', image1, image2
            }
            println 'Built and pushed image as ' + image1 + ", " + image2
        } else {
            println 'Built and pushed image as ' + image1
        }
    }
}

task versionCheck() {
    group = 'versioning'
    build.dependsOn it
    assert new File("${projectDir}/package.json")
        .text
        .contains('"version": "' + VERSION + '"')
}
