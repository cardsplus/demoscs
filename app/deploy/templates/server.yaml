apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{.Release.Namespace}}
  name: server-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: server
  template:
    metadata:
      labels:
        version: {{.Chart.Version}}
        component: server
    spec:
      imagePullSecrets:
        - name: {{.Values.image.secret}}
      containers:
        - name: server-container
          image: "{{.Values.image.registry}}/{{.Values.image.serverImageName}}:{{.Values.image.tag}}"
          imagePullPolicy: IfNotPresent
          # tag::env[]
          env:
            - name: SERVER_PORT
              value: "{{.Values.image.serverPort}}"
            - name: SPRING_APPLICATION_NAME
              value: "{{.Values.image.serverImageName}}"
            - name: SPRING_PROFILES_ACTIVE
              value: "k8s"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_METADATA_BUILDER_CONTRIBUTOR
              value: "esy.db.HyperSQLMetadataBuilderContributor"
          # end::env[]
          # tag::ports[]
          ports:
            - containerPort: {{.Values.image.serverPort}}
              name: server-port
          # end::ports[]
          # tag::resources[]
          resources:
            requests:
              cpu: {{.Values.image.serverCpu}}
              memory: {{.Values.image.serverMemory}}
            limits:
              cpu: {{.Values.image.serverCpu}}
              memory: {{.Values.image.serverMemory}}
          # end::resources[]
          # tag::readiness[]
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 3
            failureThreshold: 60
            httpGet:
              port: server-port
              path: /actuator/health/readiness
          # end::readiness[]
          # tag::liveness[]
          livenessProbe:
            initialDelaySeconds: 300
            httpGet:
              port: server-port
              path: /actuator/health/liveness
          # tag::liveness[]
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{.Release.Namespace}}
  name: server-cluster-ip
spec:
  type: ClusterIP
  selector:
    component: server
  ports:
    - port: {{.Values.image.serverPort}}
      name: server-port
      targetPort: server-port
