plugins {
    id 'java-library'
    id 'eclipse'
    id 'jacoco'
    id 'io.spring.dependency-management'
    id 'org.springframework.boot'
    id 'com.diffplug.spotless'
}

spotless {
    encoding 'UTF-8'
    java {
        target '**/src/**/*.java'
        target.exclude('**/build/**')
        indentWithSpaces(4)
        removeUnusedImports()
    }
}

dependencies {
    api project(':app:backend-api')
    // https://projectlombok.org
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
}
dependencies {
    // https://projectlombok.org
    testImplementation('org.projectlombok:lombok')
    // https://spring.io/projects/spring-framework
    testImplementation('org.springframework:spring-test')
    // https://hibernate.org/validator
    testImplementation('org.glassfish:jakarta.el')
    // https://junit.org/junit5
    testImplementation('org.junit.jupiter:junit-jupiter')
    // https://site.mockito.org/
    testImplementation('org.mockito:mockito-junit-jupiter')
}

test {
    mustRunAfter ":app:backend-api:test"
    reports {
        html.enabled true
        html.destination = file("${rootDir}/pages/html/" + project.name + "/junit5")
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
        html.destination file("${rootDir}/pages/html/" + project.name + "/jacoco")
    }
}

jar {
    enabled = true
    manifest {
        attributes 'Specification-Title': project.name
        attributes 'Specification-Version': VERSION
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
    }
}

bootJar {
    enabled = false
}

bootRun {
    enabled = false
}

bootBuildImage {
    enabled = false
}
